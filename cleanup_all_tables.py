#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—É–¥–∞–ª—è–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É).
"""
import asyncio

from sqlalchemy import text

from src.audioscribetranslate.core.config import get_settings
from src.audioscribetranslate.db.session import AsyncSessionLocal

TABLES = [
    "audio_files",
    "transcripts",
    "translations",
    "summaries",
    "users"
    # –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
]

def print_db_config():
    settings = get_settings()
    import os
    print("--- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---")
    print(f"os.environ['POSTGRES_HOST']: {os.environ.get('POSTGRES_HOST')}")
    print(f"os.environ['ENV']: {os.environ.get('ENV')}")
    print(f"–§–∞–π–ª .env.local —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists('.env.local')}")
    print(f"–¢–µ–∫—É—â–∏–π —Ä–∞–±–æ—á–∏–π –∫–∞—Ç–∞–ª–æ–≥: {os.getcwd()}")
    print("------------------------------------------")
    print("--- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ---")
    print(f"host: {settings.postgres_host}")
    print(f"port: {settings.postgres_port}")
    print(f"user: {settings.postgres_user}")
    print(f"db:   {settings.postgres_db}")
    print(f"url:  {settings.database_url}")
    print(f"env:  {settings.current_env_file}")
    print("------------------------------------------")

async def truncate_all_tables():
    async with AsyncSessionLocal() as db:
        try:
            for table in TABLES:
                await db.execute(text(f"TRUNCATE TABLE {table} RESTART IDENTITY CASCADE"))
            await db.commit()
            print("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –æ—á–∏—â–µ–Ω—ã!")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
            await db.rollback()
    print("üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    print_db_config()
    asyncio.run(truncate_all_tables())
