"""user: replace email with name, add is_admin

Revision ID: f118b9b596f9
Revises: 176deed87d24
Create Date: 2025-08-08 15:16:40.427664

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f118b9b596f9"
down_revision: Union[str, Sequence[str], None] = "176deed87d24"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # 1. Добавляем name nullable, is_admin nullable
    op.add_column("users", sa.Column("name", sa.String(), nullable=True))
    op.add_column("users", sa.Column("is_admin", sa.Integer(), nullable=True))
    # 2. Заполняем name для всех существующих пользователей (через email или 'unknown')
    conn = op.get_bind()
    conn.execute(sa.text("UPDATE users SET name = email"))
    # 3. Делаем name NOT NULL
    with op.batch_alter_table("users") as batch_op:
        batch_op.alter_column("name", nullable=False)
    # 4. Удаляем email, меняем индексы
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_index(op.f("ix_users_name"), "users", ["name"], unique=True)
    op.drop_column("users", "email")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.drop_index(op.f("ix_users_name"), table_name="users")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.drop_column("users", "is_admin")
    op.drop_column("users", "name")
    # ### end Alembic commands ###
